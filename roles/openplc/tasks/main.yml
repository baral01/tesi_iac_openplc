---
- name: Install linux dependencies
  ansible.builtin.package:
    name:
      - build-essential
      - pkg-config
      - bison
      - flex
      - autoconf
      - automake
      - libtool
      - make
      - git
      - python2.7
      - sqlite3
      - cmake
      - curl
      - python3
      - python3-pip
    state: present

- name: Check if pip2 is already present
  ansible.builtin.command:
    cmd: pip2 --version
  ignore_errors: true
  # Both success and failure of this command are acceptable
  failed_when: false
  # Save result in pip2_check variable, its return code will be used later
  register: pip2_check
  # Running this command doesn't change anything
  changed_when: false

- name: Download pip2
  ansible.builtin.get_url:
    url: https://bootstrap.pypa.io/pip/2.7/get-pip.py
    # destination directory must exist
    dest: "{{ working_directory }}/get-pip.py"
    mode: 0644
    force: true
  # skip if pip2 is already present
  when: pip2_check.rc != 0

- name: Install pip2
  ansible.builtin.command:
    cmd: python2.7 '{{ working_directory }}/get-pip.py'
  # This command always produce a change:
  # if run for the 1st time, it installs pip2
  # if run after that, it removes pip3 from PATH
  changed_when: true
  # skip if pip2 is already present
  when: pip2_check.rc != 0

- name: Remove file get-pip.py (pip2)
  ansible.builtin.file:
    path: "{{ working_directory }}/get-pip.py"
    state: absent
  # skip if pip2 is already present
  when: pip2_check.rc != 0

- name: Install python2 dependencies
  ansible.builtin.pip:
    name:
      - flask
      - flask-login
      - pyserial
      - pymodbus
    executable: pip2

- name: Install python3 dependencies
  ansible.builtin.pip:
    name:
      - pymodbus==2.5.3
    executable: pip3

- name: Git checkout from github of OpenPLC
  ansible.builtin.git:
    repo: https://github.com/thiagoralves/OpenPLC_v3.git
    dest: "{{ working_directory }}/OpenPLC_v3"
    version: "{{ commit_sha }}"
    # don't discard any modified files in the working repository
    force: false
  register: git_result
  # The task fails if both conditions are satisfied, otherwise it's good
  # Failing if there's no change (changed == true should happen only after
  # the first checkout, when the repository is created) except when
  # it's due to local modifications existing in the dest folder
  # (which means that OpenPLC has already been installed)
  failed_when:
    - git_result.changed == false
    - '"Local modifications exist in the destination: " not in git_result.msg'

- name: Check for file start_openplc.sh
  ansible.builtin.stat:
    path: "{{ working_directory }}/OpenPLC_v3/start_openplc.sh"
  register: stat_result

- name: Execute OpenPLC's installation script # noqa command-instead-of-shell
  # The installation script (and the other scripts it calls) uses pipelines and
  # other shell functionalities, so it's not possible to use the command module
  ansible.builtin.shell:
    cmd: ./install.sh custom
    chdir: "{{ working_directory }}/OpenPLC_v3"
  # the execution of this task produces changes
  changed_when: true
  # skip if it has already been run once
  when: not stat_result.stat.exists

- name: Template the openplc.service file to the remote host
  ansible.builtin.template:
    src: openplc.service
    dest: /lib/systemd/system/
    mode: 0644

- name: Enable and start openplc service
  ansible.builtin.systemd:
    name: openplc.service
    state: started
    enabled: true
    daemon_reload: true
